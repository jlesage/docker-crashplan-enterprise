<!--
Definitions for CrashPlan Enterprise docker container.

This file is used as data source to generate README.md and unRAID template files
from Jinja2 templates.
-->
<defs>
  <app>
    <id>19</id>
    <gui_type>x11</gui_type>
    <friendly_name>CrashPlan Enterprise</friendly_name>
    <name>{{ defs.app.friendly_name|lower|replace(' ', '-') }}</name>
    <project>
      <description>
One solution to safeguard corporate data against data loss, leak, misuse
and theft.
      </description>
      <url>https://www.code42.com</url>
    </project>
    <unraid>
      <support_url>https://forums.unraid.net/topic/XXXXX-support-crashplan-enterprise/</support_url>
      <category>Backup:</category>
    </unraid>
    <container>
      <rough_download_size>250MB</rough_download_size>
      <storage_permissions>ro</storage_permissions>
    </container>
    <!-- Extra stuff to be added to the documentation. -->
    <documentation>
      <section>
        <title level="2">Taking Over Existing Backup</title>
        <content>
If this container is replacing a CrashPlan installation (from Linux, Windows,
MAC or another Docker container), your existing backup can be taken over to
avoid re-uploading all your data.

To proceed, make sure to carefully read the [official documentation].

Here is a summary of what needs to be done:
  1. Start CrashPlan Docker container.  Make sure the configuration directory
     is not mapped to a folder used by a different CrashPlan container.
  2. Sign in to your account.
  3. Click the **Replace Existing** button to start the wizard.
  4. Skip *Step 2 - File Transfert*.
  4. Once done with the wizard, go to your device's details and click
     *Manage Files*.  You will probably see missing items in the file
     selection.  This is normal, since path to your files may be different in
     the container.
  5. Update the file selection by re-adding your files.  **Do not unselect
     missing items yet**.
  6. Perform a backup.  Because of deduplication, files will not be uploaded
     again.
  7. Once the backup is terminated, you can remove missing items **if you
     don't care about file versions**.  Else, keep missing items.

**NOTE**: Don't be confused by the directory structure from your old being
visible in the *Manage Files* window.  By default, your files are now located
under the `/storage` folder.
        </content>
      </section>
      <section>
        <title level="2">Why CrashPlan Self Update Is Disabled</title>
        <content>
One advantage of a Docker image is that it can be versioned and predictable,
meaning that a specific version of the image always behaves the same way.  So
if, for any reason, a new image version has a problem and doesn't work as
expected, it's easy for one to revert to the previous version and be back on
track.

Allowing CrashPlan to update itself obviously breaks this benefit.  Also, since
the container has only the minimal set of libraries and tools required to run
CrashPlan, it would be easy for an automatic update to break the container by
requiring new dependencies.  Finally, the automatic update script is not adapted
for Alpine Linux (the distribution on which this container is based on) and
assumes it is running on a full-featured distibution.  For example, this image
doesn't have a desktop like normal installations and some of the tools required
to perform the update are missing.
        </content>
      </section>
      <section>
        <title level="2">Troubleshooting</title>
        <content/>
      </section>
      <section>
        <title level="3">Crashes / Maximum Amount of Allocated Memory</title>
        <content>
If CrashPlan crashes unexpectedly with large backups, try to increase the
maximum amount of memory CrashPlan is allowed to use. This can be done by:

  1. Setting the `CRASHPLAN_SRV_MAX_MEM` environment variable.  See the
     [Environment Variables](#environment-variables) section for more details.
  2. Using the [solution provided by CrashPlan] from its support site.
        </content>
      </section>
      <section>
        <title level="3">Inotify's Watch Limit</title>
        <content>
If CrashPlan exceeds inotify's max watch limit, real-time file watching cannot
work properly and the inotify watch limit needs to be increased on the **host**,
not the container.

For more details, see the CrashPlan's [Linux real-time file watching errors]
article.
        </content>
      </section>
      <section>
        <title level="4">Synology</title>
        <content>
On Synology NAS, the instuctions provided by the article mentioned in the
previous section apply, except that the inotify's max watch limit must be set in
`/etc.defaults/sysctl.conf` (instead of `/etc/sysctl.conf`) to make the setting
permanent.

**NOTE**: After an upgrade of the DSM software, verify that the content of the
file has not been overwritten.
        </content>
      </section>
      <section>
        <title level="3">Empty `/storage`</title>
        <content>
If the `/storage` folder inside the container is empty:

  - Make sure the folder is properly mapped to the host.  This is done via the
    `-v` parameter of the `docker run` command.  See the [Usage](#usage)
    section.
  - Make sure permissions and ownership of files on the host are correct and are
    compatible with the user under which the container application is running
    (defined by the `USER_ID` and `GROUP_ID` environment variables).  See the
    [User/Group IDs](#usergroup-ids) section.

NOTE: If running the application as root (`USER_ID=0` and `GROUP_ID=0`) makes
the files visible, it confirms that there is a permission issue.
        </content>
      </section>
      <section>
        <title level="3">Device Status Is Waiting For Connection</title>
        <content>
If the status of your device is stuck on *Waiting for connection*, clearing the
the cache of CrashPlan can help resolve the issue:

  - Stop the container.
  - Remove all the content of the `cache` directory found under the container's
    configuration directory.  For example, if the `/config` folder of the
    container is mapped to `/docker/appdata/crashplan-enterprise` on the host,
    the following command (ran on the host) would clear the cache:
    ```
    rm -rf /docker/appdata/crashplan-enterprise/cache/*
    ```
  - Start the container.
        </content>
      </section>
      <section>
        <title level="3">Cannot Restore Files</title>
        <content>
If CrashPlan fails to restore files, make sure the location where files are
restored have write permission.

A typical installation has the data to be backup under the `/storage` folder.
This folder is usually mapped to the host with *read-only* permission.  Thus,
restoring files to `/storage` won't be allowed.  The solution is to temporarily
change the permission of the volume to *read-write*.

For example, if `/storage` is mapped to `$HOME` on the host, the container would
need to be deleted and then re-created with the same arguments, with the exception
of `-v $HOME:/storage:ro` that is replaced with `-v $HOME:/storage:rw`.
        </content>
      </section>
      <section>
        <title level="3">Upgrade Failed Error Message</title>
        <content>
Because the CrashPlan's self-upgrade feature is disabled in this container, an
error message about failed upgrade can be seen when a new CrashPlan version is
released.

To fix this, [updating the container's image](#docker-image-update) to the
latest version will also bring the latest version of CrashPlan.
        </content>
      </section>
      <link>
        <name>official documentation</name>
        <url>https://support.code42.com/CrashPlan/6/Configuring/Replace_your_device</url>
      </link>
      <link>
        <name>solution provided by CrashPlan</name>
        <url>https://support.code42.com/CrashPlan/6/Troubleshooting/Adjust_Code42_app_settings_for_memory_usage_with_large_backups</url>
      </link>
      <link>
        <name>Linux real-time file watching errors</name>
        <url>https://support.code42.com/CrashPlan/6/Troubleshooting/Linux_real-time_file_watching_errors</url>
      </link>
    </documentation>
    <!-- Changelog of the application. -->
    <history>
      <release>
        <version>1.10.6</version>
        <date>2022-02-15</date>
        <change>Fixed an issue where restoring files would not work.</change>
        <change>Now using baseimage version 3.5.8, based on Alpine 3.14, which brings the following change:</change>
        <change>Updated installed packages to get latest security fixes.</change>
      </release>
      <release>
        <version>1.10.5</version>
        <date>2022-01-21</date>
        <change>Updated CrashPlan to version 8.8.2.143.</change>
      </release>
      <release>
        <version>1.10.4</version>
        <date>2021-12-26</date>
        <change>Fixed, again, an issue where restoring files to an "other" location would crash the UI.</change>
      </release>
      <release>
        <version>1.10.3</version>
        <date>2021-12-25</date>
        <change>Added workaround for an issue where the CrashPlan engine would not start on devices running older kernel version.</change>
      </release>
      <release>
        <version>1.10.2</version>
        <date>2021-12-25</date>
        <change>Fixed an issue where restoring files to an "other" location would crash the UI.</change>
        <change>Fixed handling of filenames with special characters.</change>
      </release>
      <release>
        <version>1.10.1</version>
        <date>2021-12-20</date>
        <change>Updated CrashPlan to version 8.8.1.36.</change>
      </release>
      <release>
        <version>1.10.0</version>
        <date>2021-12-16</date>
        <change>Updated CrashPlan to version 8.8.1.</change>
      </release>
      <release>
        <version>1.9.1</version>
        <date>2021-09-08</date>
        <change>Updated CrashPlan to version 8.7.1.</change>
      </release>
      <release>
        <version>1.9.0</version>
        <date>2021-08-12</date>
        <change>Updated CrashPlan to version 8.7.0.</change>
      </release>
      <release>
        <version>1.8.1</version>
        <date>2021-06-03</date>
        <change>Updated CrashPlan to version 8.6.1.</change>
      </release>
      <release>
        <version>1.8.0</version>
        <date>2021-03-18</date>
        <change>Updated CrashPlan to version 8.6.0.</change>
      </release>
      <release>
        <version>1.7.1</version>
        <date>2020-10-29</date>
        <change>Removed debug messages that were left by mistake.</change>
      </release>
      <release>
        <version>1.7.0</version>
        <date>2020-10-20</date>
        <change>Updated CrashPlan Enterprise to version 8.5.0.</change>
      </release>
      <release>
        <version>1.6.2</version>
        <date>2020-09-10</date>
        <change>Fixed an issue that was preventing files to be restored.</change>
        <change>Fixed an issue where the restart command of the console would not work.</change>
      </release>
      <release>
        <version>1.6.1</version>
        <date>2020-08-05</date>
        <change>Upgraded CrashPlan Enterprise to version 8.2.2.</change>
        <change>Now using baseimage version 3.5.6, which brings the following changes:</change>
        <change level="2">Other small adjustments for the YAD log monitor target.</change>
      </release>
      <release>
        <version>1.6.0</version>
        <date>2020-07-19</date>
        <change>Upgraded CrashPlan Enterprise to version 8.2.0.</change>
        <change>Now using baseimage v3.5.5, which brings the following changes:</change>
        <change level="2">Upgraded glibc to version 2.31 on Alpine Linux images with glibc integrated.</change>
        <change level="2">Updated installed packages to get latest security fixes.</change>
        <change level="2">Adjusted the log monitor target for recent versions of YAD.</change>
      </release>
      <release>
        <version>1.5.0</version>
        <date>2020-05-10</date>
        <change>Upgraded CrashPlan Enterprise to version 8.0.0.</change>
      </release>
      <release>
        <version>1.4.1</version>
        <date>2020-04-06</date>
        <change>Fixed handling of CRASHPLAN_SRV_MAX_MEM.</change>
      </release>
      <release>
        <version>1.4.0</version>
        <date>2020-02-12</date>
        <change>Upgraded CrashPlan Enterprise to version 7.7.0.</change>
      </release>
      <release>
        <version>1.3.0</version>
        <date>2019-11-22</date>
        <change>Upgraded CrashPlan Enterprise to version 7.4.0.</change>
        <change>Now using baseimage v3.5.3, which brings the following changes:</change>
        <change level="2">Updated installed packages to get latest security fixes.</change>
        <change level="2">Make sure the tzdata is installed.</change>
      </release>
      <release>
        <version>1.2.2</version>
        <date>2019-10-22</date>
        <change>Fixed a notification message.</change>
      </release>
      <release>
        <version>1.2.1</version>
        <date>2019-10-08</date>
        <change>Fixed issue where the wrong log file was monitored.</change>
      </release>
      <release>
        <version>1.2.0</version>
        <date>2019-09-18</date>
        <change>Upgraded CrashPlan Enterprise to version 7.2.0.</change>
      </release>
      <release>
        <version>1.1.3</version>
        <date>2019-09-05</date>
        <change>Fixed misleading message about real-time file watching failure.</change>
      </release>
      <release>
        <version>1.1.2</version>
        <date>2019-07-13</date>
        <change>Upgraded CrashPlan Enterprise to version 7.0.0 build 585.</change>
      </release>
      <release>
        <version>1.1.1</version>
        <date>2019-06-22</date>
        <change>Fixed an issue where setting (via the environment variable) the maximum amount of memory CrashPlan is allowed to use would prevent the engine to start.</change>
      </release>
      <release>
        <version>1.1.0</version>
        <date>2019-06-22</date>
        <change>Upgraded CrashPlan Enterprise to version 7.0.0.</change>
      </release>
      <release>
        <version>1.0.3</version>
        <date>2019-04-24</date>
        <change>Now using baseimage v3.5.2, which brings the following changes:</change>
        <change level="2">Updated installed packages to get latest security fixes.</change>
        <change level="2">Fixed issue where the container could have a zombie process.</change>
        <change level="2">Fixed issue where the password would not be submitted when pressing the enter key in the password modal.</change>
        <change level="2">Use relative path for favicon ressources to be more friendly with reverse proxy senarios.</change>
      </release>
      <release>
        <version>1.0.2</version>
        <date>2019-04-18</date>
        <change>Upgraded CrashPlan Enterprise to version 6.9.4.</change>
      </release>
      <release>
        <version>1.0.1</version>
        <date>2019-02-25</date>
        <change>Upgraded CrashPlan Enterprise to version 6.9.2.</change>
      </release>
      <release>
        <version>1.0.0</version>
        <date>2018-12-19</date>
        <change>Initial release.</change>
      </release>
    </history>
  </app>
  <container>
    <!-- Environment variables -->
    <environment_variables>
      <environment_variable>
        <name>CRASHPLAN_SRV_MAX_MEM</name>
        <description>Maximum amount of memory the CrashPlan Engine is allowed to use. One of the following memory unit (case insensitive) should be added as a suffix to the size: `G`, `M` or `K`.  By default, when this variable is not set, a maximum of 1024MB (`1024M`) of memory is allowed. **NOTE**: Setting this variable as the same effect as running the `java mx VALUE, restart` command from the CrashPlan command line.</description>
        <unraid_template>
          <title>Maximum Memory</title>
          <description>Maximum amount of memory the CrashPlan Engine is allowed to use.  One of the following memory unit (case insensitive) should be added as a suffix to the size: [b][i]G[/i][/b], [b][i]M[/i][/b] or [b][i]K[/i][/b]. By default, when this variable is not set, a maximum of 1024MB ([b][i]1024M[/i][/b]) of memory is allowed.</description>
          <display>advanced</display>
          <required>false</required>
          <mask>false</mask>
        </unraid_template>
      </environment_variable>
    </environment_variables>
    <!-- Volumes -->
    <volumes/>
    <!-- Network ports -->
    <ports/>
    <!-- Devices -->
    <devices/>
    <!-- Extra parameters -->
    <extra_params/>
  </container>
</defs>
